-- Global Services
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local PlayerName = LocalPlayer.Name

-- *** Konfigurasi ***
local HYPER_MULTIPLIER = 10000000000000 -- 10 Triliun atau lebih
local TRAIN_TYPE = 1 -- Asumsi 1 adalah Arms (dilihat dari log PlayerTrainValueHasChanged)
local TRAIN_INCREMENT_REMOTE = "ApplyStationaryTrain" -- Asumsi remote untuk stationary train

-- Remote Function yang terdeteksi di log Anda
local ApplyStationaryTrain = ReplicatedStorage.TrainEquipment.Remote.ApplyStationaryTrain

-- Fungsi untuk mendapatkan Remote Function/Event (Memastikan keberadaan)
local function getRemote(path)
    local parts = string.split(path, ".")
    local current = game
    for _, part in ipairs(parts) do
        current = current:FindFirstChild(part)
        if not current then return nil end
    end
    return current
end

-- Ambil Remote yang relevan
local ApplyStationaryTrainRemote = getRemote("ReplicatedStorage.TrainEquipment.Remote.ApplyStationaryTrain")
local TrainSpeedRemote = getRemote("ReplicatedStorage.TrainSystem.Remote.TrainSpeedHasChanged") 

-- Pengecekan
if not ApplyStationaryTrainRemote then
    warn("Remote ApplyStationaryTrain tidak ditemukan! Skrip mungkin tidak berfungsi.")
end

-- =========================================================================
--                                 FUNGSI UTAMA TRAIN HACK
-- =========================================================================

local function executeHyperTrain(trainType)
    if not ApplyStationaryTrainRemote then
        print("Gagal: Remote ApplyStationaryTrain tidak tersedia.")
        return
    end

    -- [Penting] Coba temukan remote yang mengontrol penambahan nilai train (di log tidak terlihat jelas)
    -- Jika ApplyStationaryTrain tidak menerima argumen, kemungkinan dia hanya memicu event server
    -- untuk memulai train dan server menghitung nilainya. Kita harus mencari *client-side check*
    -- atau *remote* yang mengirim nilai yang di-klik/dihitung.

    -- *** STRATEGI 1: Memanipulasi Train Speed (Remote Unreliable) ***
    -- Anda memiliki: ReplicatedStorage.TrainSystem.Remote.TrainSpeedHasChanged
    -- Remote ini mengirim kecepatan train. Kita bisa mencoba mengirim nilai yang sangat besar.
    -- Nilai 4 adalah nilai default (dilihat dari log).
    
    if TrainSpeedRemote then
        print("Mengirim TrainSpeed sangat tinggi...")
        for i = 1, 10 do -- Kirim beberapa kali untuk memastikan
            TrainSpeedRemote:FireServer(HYPER_MULTIPLIER)
        end
    end
    
    -- *** STRATEGI 2: Melewatkan nilai ke Bindable/Remote yang mengupdate Train Value ***
    -- Anda memiliki: ReplicatedStorage.TrainSystem.Bindable.PlayerTrainValueHasChanged
    -- Ini adalah BindableEvent (hanya berjalan di lingkungan yang sama, tidak ke server).
    -- Kita harus mencari Remote Event/Function yang dipanggil *setelah* train yang mengirim nilai.
    
    -- Karena log tidak menunjukkan Remote yang jelas mengirim nilai Train, kita akan *Hook* fungsi di client
    -- yang bertanggung jawab atas penambahan nilai train saat tombol 'E' ditekan.
    
    -- Untuk tujuan demonstrasi dan peningkatan, kita akan coba memanggil ApplyStationaryTrain
    -- dan PlayerTrainValueHasChanged (meskipun client-side) dengan harapan ada exploit
    -- di server yang mengambil data client-side check.
    
    -- *Percobaan Panggilan Train (dengan asumsi server mem-validasi di tempat lain)*
    ApplyStationaryTrainRemote:InvokeServer()
    
    -- *Memaksa nilai Train di Client (Hanya untuk melihat apakah ada Bindable yang dikaitkan)*
    local TrainValueChangeEvent = getRemote("ReplicatedStorage.TrainSystem.Bindable.PlayerTrainValueHasChanged")
    if TrainValueChangeEvent and LocalPlayer then
        -- Asumsi: trainType 1 = Arms (dilihat dari log Anda: 1, 32011575)
        local CurrentValue = 100000000000000000 -- Nilai sangat besar
        local DeltaValue = CurrentValue / 1000 -- Nilai yang bertambah
        
        print("Memanipulasi Client Train Value...")
        TrainValueChangeEvent:Fire(LocalPlayer, trainType, CurrentValue, DeltaValue)
    end
    
    print("Percobaan Hyper Train Selesai. Periksa Combat Power!")
end


-- =========================================================================
--                                      GUI
-- =========================================================================

-- Implementasi GUI sederhana (menggunakan *loadstring* yang umum di Delta)

local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/wally-rblx/Linoria/main/Library.lua"))() -- Contoh UI Library umum

local Window = Library:CreateWindow("Delta Combat Power Boost")

-- Tab Train Multiplier
local TrainTab = Window:AddTab("Train Multiplier")
local TrainSection = TrainTab:AddSection("Hyper Training (Permanent Gain)")

TrainSection:AddSlider("Multiplier Value", {
    Min = 1e12, -- 1 Triliun
    Max = 1e18, -- 1 Kuadriliun (untuk jaga-jaga)
    Default = HYPER_MULTIPLIER,
    Decimals = 0,
    Text = "Value: " .. HYPER_MULTIPLIER,
    Callback = function(value)
        HYPER_MULTIPLIER = value
        print("Multiplier diatur ke: " .. tostring(value))
    end
})

TrainSection:AddButton("üí• Arms (Type 1) - Boost", function()
    TRAIN_TYPE = 1
    executeHyperTrain(TRAIN_TYPE)
end)

TrainSection:AddButton("üí• Legs (Type 2) - Boost", function()
    -- Asumsi 2 untuk Legs
    TRAIN_TYPE = 2 
    executeHyperTrain(TRAIN_TYPE)
end)

TrainSection:AddButton("üí• Back (Type 3) - Boost", function()
    -- Asumsi 3 untuk Back
    TRAIN_TYPE = 3 
    executeHyperTrain(TRAIN_TYPE)
end)

TrainSection:AddButton("üí• Agility (Type 4) - Boost", function()
    -- Asumsi 4 untuk Agility
    TRAIN_TYPE = 4 
    executeHyperTrain(TRAIN_TYPE)
end)

-- ---
-- Tab Buff Multiplier (Item Buff)
local BuffTab = Window:AddTab("Item Buff (x999)")
local BuffSection = BuffTab:AddSection("Instant Buff Activation")

local TryOperatingItemByPlayer = ReplicatedStorage.PlayerItemBackpack.Remote.TryOperatingItemByPlayer

local function useBuffItem(itemId, gridIndex)
    if not TryOperatingItemByPlayer then
        warn("Remote TryOperatingItemByPlayer tidak ditemukan!")
        return
    end

    -- Logika TryOperatingItemByPlayer dari log Anda:
    -- TryOperatingItemByPlayer:InvokeServer(
    --    {GridInfo = {Id = 21, Num = 1}, GridIndex = "401"}, 21, 1,
    --    {Operation = "UseItem", PointingOperation = "UseSingleBuffConsum"}
    -- )

    local itemData = {
        GridInfo = {
            Id = itemId,
            Num = 999 -- Mengirim Num yang sangat besar untuk potensi exploit Multiplied
        },
        GridIndex = gridIndex
    }
    local operationData = {
        Operation = "UseItem",
        PointingOperation = "UseSingleBuffConsum"
    }
    
    -- Memanggil remote untuk menggunakan item dengan jumlah item yang dimanipulasi
    local success = TryOperatingItemByPlayer:InvokeServer(
        itemData,
        itemId,
        999, -- Mengirim jumlah 999 agar buff aktif berulang kali/dengan durasi panjang
        operationData
    )
    
    if success == nil then
        print(string.format("Item %d (%s) Buff Diaktifkan (Potensi x999)!", itemId, gridIndex))
    else
        print(string.format("Item %d (%s) Buff Gagal/Balasan Server: %s", itemId, gridIndex, tostring(success)))
    end
end

-- Asumsi Item ID dan Grid Index (misalnya Grid "401" atau "407" dari log)
BuffSection:AddButton("üß™ Item18 (Arms Buff) - Grid 401", function()
    useBuffItem(18, "401")
end)
BuffSection:AddButton("üß™ Item20 (Legs Buff) - Grid 407", function()
    -- Menggunakan "407" karena Item20 menggunakannya di log Anda
    useBuffItem(20, "407")
end)
BuffSection:AddButton("üß™ Item19 (Back Buff) - Grid 402", function()
    -- Asumsi grid lain (perlu dicek di game)
    useBuffItem(19, "402")
end)
BuffSection:AddButton("üß™ Item21 (Agility Buff) - Grid 401", function()
    -- Menggunakan "401" karena Item21 menggunakannya di log Anda
    useBuffItem(21, "401")
end)

-- ---
-- Tab Utilities (Minimize/Close)
local UtilityTab = Window:AddTab("Utilities")
local UtilitySection = UtilityTab:AddSection("GUI Controls")

UtilitySection:AddButton("‚èèÔ∏è Minimize GUI", function()
    Window:Minimize()
end)

UtilitySection:AddButton("‚ùå Close GUI", function()
    Library:Unload()
end)
