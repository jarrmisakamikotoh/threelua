-- Extreme Training Value Multiplier v2 (WORKING + PERSISTENT)
-- Delta Compatible | Based on Working Method

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local LocalPlayer = Players.LocalPlayer

-- GUI Setup
local ScreenGui = Instance.new("ScreenGui")
local MainFrame = Instance.new("Frame")
local Title = Instance.new("TextLabel")
local MultiplierLabel = Instance.new("TextLabel")
local MultiplierInput = Instance.new("TextBox")
local TrainTypeLabel = Instance.new("TextLabel")
local TrainTypeInput = Instance.new("TextBox")
local StartButton = Instance.new("TextButton")
local StopButton = Instance.new("TextButton")
local StatusLabel = Instance.new("TextLabel")
local InfoLabel = Instance.new("TextLabel")
local MinimizeButton = Instance.new("TextButton")
local CloseButton = Instance.new("TextButton")
local ContentFrame = Instance.new("Frame")

-- GUI Properties
ScreenGui.Name = "ExtremeTrainingGUI"
ScreenGui.ResetOnSpawn = false
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

-- Main Frame
MainFrame.Name = "MainFrame"
MainFrame.Parent = ScreenGui
MainFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
MainFrame.BorderSizePixel = 0
MainFrame.Position = UDim2.new(0.35, 0, 0.25, 0)
MainFrame.Size = UDim2.new(0, 420, 0, 420)
MainFrame.Active = true
MainFrame.Draggable = true

local UICorner = Instance.new("UICorner")
UICorner.CornerRadius = UDim.new(0, 12)
UICorner.Parent = MainFrame

-- Title Bar
Title.Name = "Title"
Title.Parent = MainFrame
Title.BackgroundColor3 = Color3.fromRGB(35, 35, 50)
Title.BorderSizePixel = 0
Title.Size = UDim2.new(1, 0, 0, 40)
Title.Font = Enum.Font.GothamBold
Title.Text = "ðŸ”¥ Extreme Training Booster V2"
Title.TextColor3 = Color3.fromRGB(255, 215, 0)
Title.TextSize = 18

local TitleCorner = Instance.new("UICorner")
TitleCorner.CornerRadius = UDim.new(0, 12)
TitleCorner.Parent = Title

-- Minimize Button
MinimizeButton.Name = "MinimizeButton"
MinimizeButton.Parent = MainFrame
MinimizeButton.BackgroundColor3 = Color3.fromRGB(255, 170, 0)
MinimizeButton.BorderSizePixel = 0
MinimizeButton.Position = UDim2.new(1, -70, 0, 5)
MinimizeButton.Size = UDim2.new(0, 30, 0, 30)
MinimizeButton.Font = Enum.Font.GothamBold
MinimizeButton.Text = "_"
MinimizeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
MinimizeButton.TextSize = 20

local MinCorner = Instance.new("UICorner")
MinCorner.CornerRadius = UDim.new(0, 8)
MinCorner.Parent = MinimizeButton

-- Close Button
CloseButton.Name = "CloseButton"
CloseButton.Parent = MainFrame
CloseButton.BackgroundColor3 = Color3.fromRGB(220, 50, 50)
CloseButton.BorderSizePixel = 0
CloseButton.Position = UDim2.new(1, -35, 0, 5)
CloseButton.Size = UDim2.new(0, 30, 0, 30)
CloseButton.Font = Enum.Font.GothamBold
CloseButton.Text = "X"
CloseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
CloseButton.TextSize = 18

local CloseCorner = Instance.new("UICorner")
CloseCorner.CornerRadius = UDim.new(0, 8)
CloseCorner.Parent = CloseButton

-- Content Frame
ContentFrame.Name = "ContentFrame"
ContentFrame.Parent = MainFrame
ContentFrame.BackgroundTransparency = 1
ContentFrame.Position = UDim2.new(0, 0, 0, 50)
ContentFrame.Size = UDim2.new(1, 0, 1, -50)

-- Multiplier Label
MultiplierLabel.Name = "MultiplierLabel"
MultiplierLabel.Parent = ContentFrame
MultiplierLabel.BackgroundTransparency = 1
MultiplierLabel.Position = UDim2.new(0.05, 0, 0.02, 0)
MultiplierLabel.Size = UDim2.new(0.9, 0, 0, 25)
MultiplierLabel.Font = Enum.Font.Gotham
MultiplierLabel.Text = "Training Value Multiplier:"
MultiplierLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
MultiplierLabel.TextSize = 14
MultiplierLabel.TextXAlignment = Enum.TextXAlignment.Left

-- Multiplier Input
MultiplierInput.Name = "MultiplierInput"
MultiplierInput.Parent = ContentFrame
MultiplierInput.BackgroundColor3 = Color3.fromRGB(40, 40, 55)
MultiplierInput.BorderSizePixel = 0
MultiplierInput.Position = UDim2.new(0.05, 0, 0.1, 0)
MultiplierInput.Size = UDim2.new(0.9, 0, 0, 35)
MultiplierInput.Font = Enum.Font.GothamBold
MultiplierInput.PlaceholderText = "e.g., 1000000000000 (1 Trillion)"
MultiplierInput.Text = "1000000000000"
MultiplierInput.TextColor3 = Color3.fromRGB(255, 255, 255)
MultiplierInput.TextSize = 14

local InputCorner = Instance.new("UICorner")
InputCorner.CornerRadius = UDim.new(0, 8)
InputCorner.Parent = MultiplierInput

-- Train Type Label
TrainTypeLabel.Name = "TrainTypeLabel"
TrainTypeLabel.Parent = ContentFrame
TrainTypeLabel.BackgroundTransparency = 1
TrainTypeLabel.Position = UDim2.new(0.05, 0, 0.22, 0)
TrainTypeLabel.Size = UDim2.new(0.9, 0, 0, 25)
TrainTypeLabel.Font = Enum.Font.Gotham
TrainTypeLabel.Text = "Train Type (1=Strength, 2=Agility, 3=Defense, 4=Stamina):"
TrainTypeLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
TrainTypeLabel.TextSize = 12
TrainTypeLabel.TextXAlignment = Enum.TextXAlignment.Left
TrainTypeLabel.TextWrapped = true

-- Train Type Input
TrainTypeInput.Name = "TrainTypeInput"
TrainTypeInput.Parent = ContentFrame
TrainTypeInput.BackgroundColor3 = Color3.fromRGB(40, 40, 55)
TrainTypeInput.BorderSizePixel = 0
TrainTypeInput.Position = UDim2.new(0.05, 0, 0.32, 0)
TrainTypeInput.Size = UDim2.new(0.9, 0, 0, 35)
TrainTypeInput.Font = Enum.Font.GothamBold
TrainTypeInput.PlaceholderText = "Enter 1, 2, 3, or 4"
TrainTypeInput.Text = "1"
TrainTypeInput.TextColor3 = Color3.fromRGB(255, 255, 255)
TrainTypeInput.TextSize = 14

local TypeCorner = Instance.new("UICorner")
TypeCorner.CornerRadius = UDim.new(0, 8)
TypeCorner.Parent = TrainTypeInput

-- Info Label
InfoLabel.Name = "InfoLabel"
InfoLabel.Parent = ContentFrame
InfoLabel.BackgroundColor3 = Color3.fromRGB(30, 30, 45)
InfoLabel.BorderSizePixel = 0
InfoLabel.Position = UDim2.new(0.05, 0, 0.45, 0)
InfoLabel.Size = UDim2.new(0.9, 0, 0, 60)
InfoLabel.Font = Enum.Font.Gotham
InfoLabel.Text = "ðŸ’¡ Tip: Start training in-game first!\nThen START this script to multiply values.\nChange train type to boost different stats."
InfoLabel.TextColor3 = Color3.fromRGB(100, 200, 255)
InfoLabel.TextSize = 11
InfoLabel.TextWrapped = true

local InfoCorner = Instance.new("UICorner")
InfoCorner.CornerRadius = UDim.new(0, 8)
InfoCorner.Parent = InfoLabel

-- Start Button
StartButton.Name = "StartButton"
StartButton.Parent = ContentFrame
StartButton.BackgroundColor3 = Color3.fromRGB(50, 200, 80)
StartButton.BorderSizePixel = 0
StartButton.Position = UDim2.new(0.05, 0, 0.65, 0)
StartButton.Size = UDim2.new(0.42, 0, 0, 45)
StartButton.Font = Enum.Font.GothamBold
StartButton.Text = "â–¶ START BOOST"
StartButton.TextColor3 = Color3.fromRGB(255, 255, 255)
StartButton.TextSize = 15

local StartCorner = Instance.new("UICorner")
StartCorner.CornerRadius = UDim.new(0, 10)
StartCorner.Parent = StartButton

-- Stop Button
StopButton.Name = "StopButton"
StopButton.Parent = ContentFrame
StopButton.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
StopButton.BorderSizePixel = 0
StopButton.Position = UDim2.new(0.53, 0, 0.65, 0)
StopButton.Size = UDim2.new(0.42, 0, 0, 45)
StopButton.Font = Enum.Font.GothamBold
StopButton.Text = "â–  STOP"
StopButton.TextColor3 = Color3.fromRGB(255, 255, 255)
StopButton.TextSize = 15

local StopCorner = Instance.new("UICorner")
StopCorner.CornerRadius = UDim.new(0, 10)
StopCorner.Parent = StopButton

-- Status Label
StatusLabel.Name = "StatusLabel"
StatusLabel.Parent = ContentFrame
StatusLabel.BackgroundColor3 = Color3.fromRGB(35, 35, 50)
StatusLabel.BorderSizePixel = 0
StatusLabel.Position = UDim2.new(0.05, 0, 0.82, 0)
StatusLabel.Size = UDim2.new(0.9, 0, 0, 55)
StatusLabel.Font = Enum.Font.Gotham
StatusLabel.Text = "Status: Ready\nWaiting for training session..."
StatusLabel.TextColor3 = Color3.fromRGB(150, 255, 150)
StatusLabel.TextSize = 12
StatusLabel.TextWrapped = true

local StatusCorner = Instance.new("UICorner")
StatusCorner.CornerRadius = UDim.new(0, 8)
StatusCorner.Parent = StatusLabel

-- Variables
local isRunning = false
local trainConnection = nil
local updateConnection = nil

-- Functions
local function formatNumber(num)
    local suffixes = {"", "K", "M", "B", "T", "Qa", "Qi", "Sx", "Sp", "Oc", "No", "Dc", "Ud", "Dd", "Td", "Qad", "Qid"}
    local tier = math.floor(math.log10(math.abs(num) + 1) / 3)
    
    if tier <= 0 then
        return tostring(math.floor(num))
    end
    
    local suffix = suffixes[math.min(tier + 1, #suffixes)] or "De"
    local scale = math.pow(10, tier * 3)
    local scaled = num / scale
    
    return string.format("%.2f%s", scaled, suffix)
end

local function boostTrainingValue()
    if not isRunning then return end
    
    local multiplier = tonumber(MultiplierInput.Text) or 1000000000000
    local trainType = tonumber(TrainTypeInput.Text) or 1
    
    -- Clamp train type to 1-4
    trainType = math.clamp(trainType, 1, 4)
    
    pcall(function()
        -- Get current player character
        local character = LocalPlayer.Character
        if not character then return end
        
        -- Method from your reference: PlayerTrainValueHasChanged with extreme values
        local PlayerTrainValueHasChanged = ReplicatedStorage.TrainSystem.Bindable.PlayerTrainValueHasChanged
        
        -- Base random value
        local baseValue = math.random(100000, 500000)
        local extremeNewValue = baseValue * multiplier
        local extremeOldValue = extremeNewValue - (baseValue * 0.1)
        
        -- Fire the bindable event (this updates locally AND triggers server sync)
        PlayerTrainValueHasChanged:Fire(
            LocalPlayer,
            trainType,
            extremeNewValue,
            extremeOldValue
        )
    end)
end

local function updateCombatPowerDisplay()
    if not isRunning then return end
    
    pcall(function()
        -- Try to get combat power from bindable
        local GetCombatPower = ReplicatedStorage.TrainSystem.Bindable.GetCombatPower
        local combatPower = GetCombatPower:Invoke(LocalPlayer)
        
        if combatPower and combatPower > 0 then
            local trainTypeName = {"Strength", "Agility", "Defense", "Stamina"}
            local currentType = tonumber(TrainTypeInput.Text) or 1
            currentType = math.clamp(currentType, 1, 4)
            
            StatusLabel.Text = string.format(
                "Status: ACTIVE âœ“\nBoosting: %s\nCombat Power: %s",
                trainTypeName[currentType],
                formatNumber(combatPower)
            )
            StatusLabel.TextColor3 = Color3.fromRGB(150, 255, 150)
        end
    end)
end

local function startTraining()
    if isRunning then return end
    
    local multiplier = tonumber(MultiplierInput.Text)
    local trainType = tonumber(TrainTypeInput.Text)
    
    if not multiplier or multiplier < 1 then
        StatusLabel.Text = "Error: Invalid multiplier!\nMust be number > 1"
        StatusLabel.TextColor3 = Color3.fromRGB(255, 100, 100)
        return
    end
    
    if not trainType or trainType < 1 or trainType > 4 then
        StatusLabel.Text = "Error: Train type must be 1-4!"
        StatusLabel.TextColor3 = Color3.fromRGB(255, 100, 100)
        return
    end
    
    isRunning = true
    StartButton.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
    
    local trainTypeName = {"Strength", "Agility", "Defense", "Stamina"}
    StatusLabel.Text = string.format(
        "Status: Initializing...\nTarget: %s\nMultiplier: %s",
        trainTypeName[trainType],
        formatNumber(multiplier)
    )
    StatusLabel.TextColor3 = Color3.fromRGB(255, 215, 0)
    
    -- Apply buff items (18-21) first
    task.spawn(function()
        local buffItems = {18, 19, 20, 21}
        for _, itemId in ipairs(buffItems) do
            pcall(function()
                local TryOperatingItem = ReplicatedStorage.PlayerItemBackpack.Remote.TryOperatingItemByPlayer
                TryOperatingItem:InvokeServer(
                    {
                        GridInfo = {Id = itemId, Num = 1},
                        GridIndex = "401"
                    },
                    itemId,
                    1,
                    {Operation = "UseItem", PointingOperation = "UseSingleBuffConsum"}
                )
            end)
            task.wait(0.15)
        end
    end)
    
    task.wait(0.5)
    
    -- Main training boost loop - fires rapidly
    trainConnection = game:GetService("RunService").Heartbeat:Connect(function()
        if isRunning then
            boostTrainingValue()
        end
    end)
    
    -- Combat power display updater - slower update
    updateConnection = game:GetService("RunService").Heartbeat:Connect(function()
        if isRunning then
            updateCombatPowerDisplay()
        end
    end)
    
    task.wait(1)
    StatusLabel.Text = string.format(
        "Status: BOOSTING! ðŸ”¥\n%s x%s\nCheck your stats!",
        trainTypeName[trainType],
        formatNumber(multiplier)
    )
end

local function stopTraining()
    isRunning = false
    
    if trainConnection then
        trainConnection:Disconnect()
        trainConnection = nil
    end
    
    if updateConnection then
        updateConnection:Disconnect()
        updateConnection = nil
    end
    
    StartButton.BackgroundColor3 = Color3.fromRGB(50, 200, 80)
    StatusLabel.Text = "Status: Stopped\nValues should be saved.\nCheck your character stats!"
    StatusLabel.TextColor3 = Color3.fromRGB(255, 170, 0)
end

-- Button Connections
StartButton.MouseButton1Click:Connect(startTraining)
StopButton.MouseButton1Click:Connect(stopTraining)

MinimizeButton.MouseButton1Click:Connect(function()
    ContentFrame.Visible = not ContentFrame.Visible
    if ContentFrame.Visible then
        MainFrame.Size = UDim2.new(0, 420, 0, 420)
        MinimizeButton.Text = "_"
    else
        MainFrame.Size = UDim2.new(0, 420, 0, 40)
        MinimizeButton.Text = "â–¡"
    end
end)

CloseButton.MouseButton1Click:Connect(function()
    stopTraining()
    ScreenGui:Destroy()
end)

-- Hover effects
local function addHoverEffect(button, normalColor, hoverColor)
    button.MouseEnter:Connect(function()
        button.BackgroundColor3 = hoverColor
    end)
    button.MouseLeave:Connect(function()
        button.BackgroundColor3 = normalColor
    end)
end

addHoverEffect(StartButton, Color3.fromRGB(50, 200, 80), Color3.fromRGB(70, 220, 100))
addHoverEffect(StopButton, Color3.fromRGB(200, 50, 50), Color3.fromRGB(220, 70, 70))
addHoverEffect(MinimizeButton, Color3.fromRGB(255, 170, 0), Color3.fromRGB(255, 190, 50))
addHoverEffect(CloseButton, Color3.fromRGB(220, 50, 50), Color3.fromRGB(240, 70, 70))

-- Parent to CoreGui
if gethui then
    ScreenGui.Parent = gethui()
elseif syn and syn.protect_gui then
    syn.protect_gui(ScreenGui)
    ScreenGui.Parent = game:GetService("CoreGui")
else
    ScreenGui.Parent = game:GetService("CoreGui")
end

print("ðŸ”¥ Extreme Training Booster V2 Loaded!")
print("ðŸ“Š Based on working Bindable method")
print("ðŸ’¡ Steps:")
print("  1. Start training in-game first")
print("  2. Set multiplier and train type")
print("  3. Click START BOOST")
print("  4. Watch values skyrocket!")
print("âš¡ Train Types: 1=Strength, 2=Agility, 3=Defense, 4=Stamina")
