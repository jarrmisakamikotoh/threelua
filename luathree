-- Extreme Training Booster - AUTO CONTINUOUS VERSION
-- Continuously trains with extreme multiplier while active

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer

-- GUI Setup
local ScreenGui = Instance.new("ScreenGui")
local MainFrame = Instance.new("Frame")
local Title = Instance.new("TextLabel")
local MultiplierLabel = Instance.new("TextLabel")
local MultiplierInput = Instance.new("TextBox")
local StartButton = Instance.new("TextButton")
local StopButton = Instance.new("TextButton")
local StatusLabel = Instance.new("TextLabel")
local GainsLabel = Instance.new("TextLabel")
local InfoLabel = Instance.new("TextLabel")
local MinimizeButton = Instance.new("TextButton")
local CloseButton = Instance.new("TextButton")
local ContentFrame = Instance.new("Frame")

-- GUI Properties
ScreenGui.Name = "ExtremeTrainingGUI"
ScreenGui.ResetOnSpawn = false
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

-- Main Frame
MainFrame.Name = "MainFrame"
MainFrame.Parent = ScreenGui
MainFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
MainFrame.BorderSizePixel = 0
MainFrame.Position = UDim2.new(0.35, 0, 0.3, 0)
MainFrame.Size = UDim2.new(0, 420, 0, 400)
MainFrame.Active = true
MainFrame.Draggable = true

local UICorner = Instance.new("UICorner")
UICorner.CornerRadius = UDim.new(0, 12)
UICorner.Parent = MainFrame

-- Title Bar
Title.Name = "Title"
Title.Parent = MainFrame
Title.BackgroundColor3 = Color3.fromRGB(35, 35, 50)
Title.BorderSizePixel = 0
Title.Size = UDim2.new(1, 0, 0, 40)
Title.Font = Enum.Font.GothamBold
Title.Text = "🔥 Continuous Training Booster"
Title.TextColor3 = Color3.fromRGB(255, 215, 0)
Title.TextSize = 18

local TitleCorner = Instance.new("UICorner")
TitleCorner.CornerRadius = UDim.new(0, 12)
TitleCorner.Parent = Title

-- Minimize Button
MinimizeButton.Name = "MinimizeButton"
MinimizeButton.Parent = MainFrame
MinimizeButton.BackgroundColor3 = Color3.fromRGB(255, 170, 0)
MinimizeButton.BorderSizePixel = 0
MinimizeButton.Position = UDim2.new(1, -70, 0, 5)
MinimizeButton.Size = UDim2.new(0, 30, 0, 30)
MinimizeButton.Font = Enum.Font.GothamBold
MinimizeButton.Text = "_"
MinimizeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
MinimizeButton.TextSize = 20

local MinCorner = Instance.new("UICorner")
MinCorner.CornerRadius = UDim.new(0, 8)
MinCorner.Parent = MinimizeButton

-- Close Button
CloseButton.Name = "CloseButton"
CloseButton.Parent = MainFrame
CloseButton.BackgroundColor3 = Color3.fromRGB(220, 50, 50)
CloseButton.BorderSizePixel = 0
CloseButton.Position = UDim2.new(1, -35, 0, 5)
CloseButton.Size = UDim2.new(0, 30, 0, 30)
CloseButton.Font = Enum.Font.GothamBold
CloseButton.Text = "X"
CloseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
CloseButton.TextSize = 18

local CloseCorner = Instance.new("UICorner")
CloseCorner.CornerRadius = UDim.new(0, 8)
CloseCorner.Parent = CloseButton

-- Content Frame
ContentFrame.Name = "ContentFrame"
ContentFrame.Parent = MainFrame
ContentFrame.BackgroundTransparency = 1
ContentFrame.Position = UDim2.new(0, 0, 0, 50)
ContentFrame.Size = UDim2.new(1, 0, 1, -50)

-- Info Label (TOP)
InfoLabel.Name = "InfoLabel"
InfoLabel.Parent = ContentFrame
InfoLabel.BackgroundColor3 = Color3.fromRGB(30, 30, 45)
InfoLabel.BorderSizePixel = 0
InfoLabel.Position = UDim2.new(0.05, 0, 0.02, 0)
InfoLabel.Size = UDim2.new(0.9, 0, 0, 80)
InfoLabel.Font = Enum.Font.Gotham
InfoLabel.Text = "⚡ AUTO CONTINUOUS TRAINING\n• Trains all 4 stats automatically\n• Combat Power stays HIGH while active\n• KEEP SCRIPT RUNNING for high stats!"
InfoLabel.TextColor3 = Color3.fromRGB(255, 200, 100)
InfoLabel.TextSize = 12
InfoLabel.TextWrapped = true
InfoLabel.TextYAlignment = Enum.TextYAlignment.Top

local InfoCorner = Instance.new("UICorner")
InfoCorner.CornerRadius = UDim.new(0, 8)
InfoCorner.Parent = InfoLabel

-- Multiplier Label
MultiplierLabel.Name = "MultiplierLabel"
MultiplierLabel.Parent = ContentFrame
MultiplierLabel.BackgroundTransparency = 1
MultiplierLabel.Position = UDim2.new(0.05, 0, 0.28, 0)
MultiplierLabel.Size = UDim2.new(0.9, 0, 0, 25)
MultiplierLabel.Font = Enum.Font.Gotham
MultiplierLabel.Text = "Training Multiplier Per Cycle:"
MultiplierLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
MultiplierLabel.TextSize = 14
MultiplierLabel.TextXAlignment = Enum.TextXAlignment.Left

-- Multiplier Input
MultiplierInput.Name = "MultiplierInput"
MultiplierInput.Parent = ContentFrame
MultiplierInput.BackgroundColor3 = Color3.fromRGB(40, 40, 55)
MultiplierInput.BorderSizePixel = 0
MultiplierInput.Position = UDim2.new(0.05, 0, 0.36, 0)
MultiplierInput.Size = UDim2.new(0.9, 0, 0, 40)
MultiplierInput.Font = Enum.Font.GothamBold
MultiplierInput.PlaceholderText = "e.g., 1000000000000"
MultiplierInput.Text = "1000000000000"
MultiplierInput.TextColor3 = Color3.fromRGB(255, 255, 255)
MultiplierInput.TextSize = 16

local InputCorner = Instance.new("UICorner")
InputCorner.CornerRadius = UDim.new(0, 8)
InputCorner.Parent = MultiplierInput

-- Gains Label
GainsLabel.Name = "GainsLabel"
GainsLabel.Parent = ContentFrame
GainsLabel.BackgroundColor3 = Color3.fromRGB(35, 35, 50)
GainsLabel.BorderSizePixel = 0
GainsLabel.Position = UDim2.new(0.05, 0, 0.52, 0)
GainsLabel.Size = UDim2.new(0.9, 0, 0, 60)
GainsLabel.Font = Enum.Font.GothamBold
GainsLabel.Text = "💎 Total Cycles: 0\n🔥 All Stats Boosting!\n⚡ Combat Power Rising!"
GainsLabel.TextColor3 = Color3.fromRGB(150, 255, 150)
GainsLabel.TextSize = 13
GainsLabel.TextWrapped = true

local GainsCorner = Instance.new("UICorner")
GainsCorner.CornerRadius = UDim.new(0, 8)
GainsCorner.Parent = GainsLabel

-- Start Button
StartButton.Name = "StartButton"
StartButton.Parent = ContentFrame
StartButton.BackgroundColor3 = Color3.fromRGB(50, 200, 80)
StartButton.BorderSizePixel = 0
StartButton.Position = UDim2.new(0.05, 0, 0.7, 0)
StartButton.Size = UDim2.new(0.42, 0, 0, 50)
StartButton.Font = Enum.Font.GothamBold
StartButton.Text = "▶ START AUTO"
StartButton.TextColor3 = Color3.fromRGB(255, 255, 255)
StartButton.TextSize = 16

local StartCorner = Instance.new("UICorner")
StartCorner.CornerRadius = UDim.new(0, 10)
StartCorner.Parent = StartButton

-- Stop Button
StopButton.Name = "StopButton"
StopButton.Parent = ContentFrame
StopButton.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
StopButton.BorderSizePixel = 0
StopButton.Position = UDim2.new(0.53, 0, 0.7, 0)
StopButton.Size = UDim2.new(0.42, 0, 0, 50)
StopButton.Font = Enum.Font.GothamBold
StopButton.Text = "■ STOP"
StopButton.TextColor3 = Color3.fromRGB(255, 255, 255)
StopButton.TextSize = 16

local StopCorner = Instance.new("UICorner")
StopCorner.CornerRadius = UDim.new(0, 10)
StopCorner.Parent = StopButton

-- Status Label
StatusLabel.Name = "StatusLabel"
StatusLabel.Parent = ContentFrame
StatusLabel.BackgroundColor3 = Color3.fromRGB(35, 35, 50)
StatusLabel.BorderSizePixel = 0
StatusLabel.Position = UDim2.new(0.05, 0, 0.85, 0)
StatusLabel.Size = UDim2.new(0.9, 0, 0, 48)
StatusLabel.Font = Enum.Font.Gotham
StatusLabel.Text = "Status: Ready to start\nClick START to begin auto-training"
StatusLabel.TextColor3 = Color3.fromRGB(150, 255, 150)
StatusLabel.TextSize = 12
StatusLabel.TextWrapped = true

local StatusCorner = Instance.new("UICorner")
StatusCorner.CornerRadius = UDim.new(0, 8)
StatusCorner.Parent = StatusLabel

-- Variables
local isRunning = false
local trainCycles = 0
local connections = {}

-- Functions
local function formatNumber(num)
    local suffixes = {"", "K", "M", "B", "T", "Qa", "Qi", "Sx", "Sp", "Oc", "No", "Dc", "Ud", "Dd", "Td"}
    local tier = math.floor(math.log10(math.abs(num) + 1) / 3)
    
    if tier <= 0 then
        return tostring(math.floor(num))
    end
    
    local suffix = suffixes[math.min(tier + 1, #suffixes)] or "De"
    local scale = math.pow(10, tier * 3)
    local scaled = num / scale
    
    return string.format("%.2f%s", scaled, suffix)
end

local function continuousTraining()
    local multiplier = tonumber(MultiplierInput.Text) or 1000000000000
    
    -- Apply all 4 stats with extreme values
    for trainType = 1, 4 do
        pcall(function()
            local PlayerTrainValueHasChanged = ReplicatedStorage.TrainSystem.Bindable.PlayerTrainValueHasChanged
            local baseValue = math.random(100000, 500000)
            local extremeValue = baseValue * multiplier
            
            PlayerTrainValueHasChanged:Fire(
                LocalPlayer,
                trainType,
                extremeValue,
                extremeValue - baseValue
            )
        end)
        task.wait(0.01)
    end
    
    -- Update Combat Power
    pcall(function()
        local PlayerCombatPowerHasChanged = ReplicatedStorage.TrainSystem.Bindable.PlayerCombatPowerHasChanged
        local combatPower = multiplier * 10000
        PlayerCombatPowerHasChanged:Fire(LocalPlayer, combatPower)
    end)
    
    -- Trigger training animations/effects
    pcall(function()
        local ApplyStationaryTrain = ReplicatedStorage.TrainEquipment.Remote.ApplyStationaryTrain
        ApplyStationaryTrain:InvokeServer()
    end)
    
    trainCycles = trainCycles + 1
end

local function updateDisplay()
    pcall(function()
        local GetCombatPower = ReplicatedStorage.TrainSystem.Bindable.GetCombatPower
        local combatPower = GetCombatPower:Invoke(LocalPlayer)
        
        if combatPower then
            GainsLabel.Text = string.format(
                "💎 Total Cycles: %s\n🔥 All 4 Stats Boosting!\n⚡ Combat Power: %s",
                formatNumber(trainCycles),
                formatNumber(combatPower)
            )
        else
            GainsLabel.Text = string.format(
                "💎 Total Cycles: %s\n🔥 All 4 Stats Boosting!\n⚡ Keep script running!",
                formatNumber(trainCycles)
            )
        end
    end)
end

local function startAutoTraining()
    if isRunning then return end
    
    local multiplier = tonumber(MultiplierInput.Text)
    
    if not multiplier or multiplier < 1 then
        StatusLabel.Text = "Error: Invalid multiplier!\nEnter a number ≥ 1"
        StatusLabel.TextColor3 = Color3.fromRGB(255, 100, 100)
        return
    end
    
    isRunning = true
    trainCycles = 0
    StartButton.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
    
    StatusLabel.Text = string.format(
        "Status: Initializing...\nMultiplier: x%s",
        formatNumber(multiplier)
    )
    StatusLabel.TextColor3 = Color3.fromRGB(255, 215, 0)
    
    -- Apply buff items first
    task.spawn(function()
        local buffItems = {18, 19, 20, 21}
        for _, itemId in ipairs(buffItems) do
            pcall(function()
                local TryOperatingItem = ReplicatedStorage.PlayerItemBackpack.Remote.TryOperatingItemByPlayer
                TryOperatingItem:InvokeServer(
                    {
                        GridInfo = {Id = itemId, Num = 1},
                        GridIndex = "401"
                    },
                    itemId,
                    1,
                    {Operation = "UseItem", PointingOperation = "UseSingleBuffConsum"}
                )
            end)
            task.wait(0.1)
        end
    end)
    
    task.wait(0.5)
    
    -- Main training loop - runs every frame for maximum speed
    local trainConnection = RunService.Heartbeat:Connect(function()
        if isRunning then
            continuousTraining()
        end
    end)
    table.insert(connections, trainConnection)
    
    -- Display updater - every 0.5 seconds
    local displayConnection
    displayConnection = task.spawn(function()
        while isRunning do
            updateDisplay()
            task.wait(0.5)
        end
    end)
    
    StatusLabel.Text = "Status: AUTO-TRAINING ACTIVE! 🔥\nAll stats boosting continuously!\nDON'T CLOSE SCRIPT!"
    StatusLabel.TextColor3 = Color3.fromRGB(150, 255, 150)
end

local function stopAutoTraining()
    isRunning = false
    
    for _, connection in ipairs(connections) do
        if connection and connection.Disconnect then
            connection:Disconnect()
        end
    end
    connections = {}
    
    StartButton.BackgroundColor3 = Color3.fromRGB(50, 200, 80)
    StatusLabel.Text = string.format(
        "Status: Stopped\nCompleted %s training cycles\nStats will return to normal",
        formatNumber(trainCycles)
    )
    StatusLabel.TextColor3 = Color3.fromRGB(255, 170, 0)
end

-- Button Connections
StartButton.MouseButton1Click:Connect(startAutoTraining)
StopButton.MouseButton1Click:Connect(stopAutoTraining)

MinimizeButton.MouseButton1Click:Connect(function()
    ContentFrame.Visible = not ContentFrame.Visible
    if ContentFrame.Visible then
        MainFrame.Size = UDim2.new(0, 420, 0, 400)
        MinimizeButton.Text = "_"
    else
        MainFrame.Size = UDim2.new(0, 420, 0, 40)
        MinimizeButton.Text = "□"
    end
end)

CloseButton.MouseButton1Click:Connect(function()
    stopAutoTraining()
    ScreenGui:Destroy()
end)

-- Hover effects
local function addHoverEffect(button, normalColor, hoverColor)
    button.MouseEnter:Connect(function()
        button.BackgroundColor3 = hoverColor
    end)
    button.MouseLeave:Connect(function()
        button.BackgroundColor3 = normalColor
    end)
end

addHoverEffect(StartButton, Color3.fromRGB(50, 200, 80), Color3.fromRGB(70, 220, 100))
addHoverEffect(StopButton, Color3.fromRGB(200, 50, 50), Color3.fromRGB(220, 70, 70))
addHoverEffect(MinimizeButton, Color3.fromRGB(255, 170, 0), Color3.fromRGB(255, 190, 50))
addHoverEffect(CloseButton, Color3.fromRGB(220, 50, 50), Color3.fromRGB(240, 70, 70))

-- Parent to CoreGui
if gethui then
    ScreenGui.Parent = gethui()
elseif syn and syn.protect_gui then
    syn.protect_gui(ScreenGui)
    ScreenGui.Parent = game:GetService("CoreGui")
else
    ScreenGui.Parent = game:GetService("CoreGui")
end

print("🔥 Continuous Training Booster Loaded!")
print("⚡ AUTO MODE - Trains all 4 stats continuously")
print("💡 How it works:")
print("  • Boosts ALL 4 stats (Strength, Agility, Defense, Stamina)")
print("  • Trains EVERY FRAME for maximum speed")
print("  • Combat Power stays HIGH while script runs")
print("⚠️ IMPORTANT:")
print("  • Stats are HIGH while script is ACTIVE")
print("  • Keep script running to maintain high stats")
print("  • Values are client-side boosted continuously")
print("🚀 Ready to boost!")
