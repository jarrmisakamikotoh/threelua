-- Extreme Training Value Hook v4 (SERVER REQUEST MULTIPLIER)
-- Delta Compatible | Hooks into actual server requests

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local LocalPlayer = Players.LocalPlayer

-- GUI Setup
local ScreenGui = Instance.new("ScreenGui")
local MainFrame = Instance.new("Frame")
local Title = Instance.new("TextLabel")
local MultiplierLabel = Instance.new("TextLabel")
local MultiplierInput = Instance.new("TextBox")
local InfoLabel = Instance.new("TextLabel")
local StartButton = Instance.new("TextButton")
local StopButton = Instance.new("TextButton")
local StatusLabel = Instance.new("TextLabel")
local MinimizeButton = Instance.new("TextButton")
local CloseButton = Instance.new("TextButton")
local ContentFrame = Instance.new("Frame")

-- GUI Properties
ScreenGui.Name = "ExtremeTrainingGUI"
ScreenGui.ResetOnSpawn = false
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

-- Main Frame
MainFrame.Name = "MainFrame"
MainFrame.Parent = ScreenGui
MainFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
MainFrame.BorderSizePixel = 0
MainFrame.Position = UDim2.new(0.35, 0, 0.3, 0)
MainFrame.Size = UDim2.new(0, 420, 0, 350)
MainFrame.Active = true
MainFrame.Draggable = true

local UICorner = Instance.new("UICorner")
UICorner.CornerRadius = UDim.new(0, 12)
UICorner.Parent = MainFrame

-- Title Bar
Title.Name = "Title"
Title.Parent = MainFrame
Title.BackgroundColor3 = Color3.fromRGB(35, 35, 50)
Title.BorderSizePixel = 0
Title.Size = UDim2.new(1, 0, 0, 40)
Title.Font = Enum.Font.GothamBold
Title.Text = "üî• Training Hook V4"
Title.TextColor3 = Color3.fromRGB(255, 215, 0)
Title.TextSize = 18

local TitleCorner = Instance.new("UICorner")
TitleCorner.CornerRadius = UDim.new(0, 12)
TitleCorner.Parent = Title

-- Minimize Button
MinimizeButton.Name = "MinimizeButton"
MinimizeButton.Parent = MainFrame
MinimizeButton.BackgroundColor3 = Color3.fromRGB(255, 170, 0)
MinimizeButton.BorderSizePixel = 0
MinimizeButton.Position = UDim2.new(1, -70, 0, 5)
MinimizeButton.Size = UDim2.new(0, 30, 0, 30)
MinimizeButton.Font = Enum.Font.GothamBold
MinimizeButton.Text = "_"
MinimizeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
MinimizeButton.TextSize = 20

local MinCorner = Instance.new("UICorner")
MinCorner.CornerRadius = UDim.new(0, 8)
MinCorner.Parent = MinimizeButton

-- Close Button
CloseButton.Name = "CloseButton"
CloseButton.Parent = MainFrame
CloseButton.BackgroundColor3 = Color3.fromRGB(220, 50, 50)
CloseButton.BorderSizePixel = 0
CloseButton.Position = UDim2.new(1, -35, 0, 5)
CloseButton.Size = UDim2.new(0, 30, 0, 30)
CloseButton.Font = Enum.Font.GothamBold
CloseButton.Text = "X"
CloseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
CloseButton.TextSize = 18

local CloseCorner = Instance.new("UICorner")
CloseCorner.CornerRadius = UDim.new(0, 8)
CloseCorner.Parent = CloseButton

-- Content Frame
ContentFrame.Name = "ContentFrame"
ContentFrame.Parent = MainFrame
ContentFrame.BackgroundTransparency = 1
ContentFrame.Position = UDim2.new(0, 0, 0, 50)
ContentFrame.Size = UDim2.new(1, 0, 1, -50)

-- Multiplier Label
MultiplierLabel.Name = "MultiplierLabel"
MultiplierLabel.Parent = ContentFrame
MultiplierLabel.BackgroundTransparency = 1
MultiplierLabel.Position = UDim2.new(0.05, 0, 0.05, 0)
MultiplierLabel.Size = UDim2.new(0.9, 0, 0, 25)
MultiplierLabel.Font = Enum.Font.Gotham
MultiplierLabel.Text = "Training Value Multiplier:"
MultiplierLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
MultiplierLabel.TextSize = 14
MultiplierLabel.TextXAlignment = Enum.TextXAlignment.Left

-- Multiplier Input
MultiplierInput.Name = "MultiplierInput"
MultiplierInput.Parent = ContentFrame
MultiplierInput.BackgroundColor3 = Color3.fromRGB(40, 40, 55)
MultiplierInput.BorderSizePixel = 0
MultiplierInput.Position = UDim2.new(0.05, 0, 0.15, 0)
MultiplierInput.Size = UDim2.new(0.9, 0, 0, 40)
MultiplierInput.Font = Enum.Font.GothamBold
MultiplierInput.PlaceholderText = "Enter multiplier (e.g., 1000000 = 1 Million)"
MultiplierInput.Text = "1000000"
MultiplierInput.TextColor3 = Color3.fromRGB(255, 255, 255)
MultiplierInput.TextSize = 14

local InputCorner = Instance.new("UICorner")
InputCorner.CornerRadius = UDim.new(0, 8)
InputCorner.Parent = MultiplierInput

-- Info Label
InfoLabel.Name = "InfoLabel"
InfoLabel.Parent = ContentFrame
InfoLabel.BackgroundColor3 = Color3.fromRGB(30, 30, 45)
InfoLabel.BorderSizePixel = 0
InfoLabel.Position = UDim2.new(0.05, 0, 0.32, 0)
InfoLabel.Size = UDim2.new(0.9, 0, 0, 90)
InfoLabel.Font = Enum.Font.Gotham
InfoLabel.Text = "üí° How to use:\n1. Click START to activate hook\n2. Start training in-game (Arms/Legs/etc)\n3. Training values multiply automatically!\n4. Values save to server permanently\n‚ö†Ô∏è Start with low values like 1000000 first!"
InfoLabel.TextColor3 = Color3.fromRGB(100, 200, 255)
InfoLabel.TextSize = 11
InfoLabel.TextWrapped = true
InfoLabel.TextYAlignment = Enum.TextYAlignment.Top

local InfoCorner = Instance.new("UICorner")
InfoCorner.CornerRadius = UDim.new(0, 8)
InfoCorner.Parent = InfoLabel

-- Start Button
StartButton.Name = "StartButton"
StartButton.Parent = ContentFrame
StartButton.BackgroundColor3 = Color3.fromRGB(50, 200, 80)
StartButton.BorderSizePixel = 0
StartButton.Position = UDim2.new(0.05, 0, 0.6, 0)
StartButton.Size = UDim2.new(0.42, 0, 0, 45)
StartButton.Font = Enum.Font.GothamBold
StartButton.Text = "‚ñ∂ START HOOK"
StartButton.TextColor3 = Color3.fromRGB(255, 255, 255)
StartButton.TextSize = 15

local StartCorner = Instance.new("UICorner")
StartCorner.CornerRadius = UDim.new(0, 10)
StartCorner.Parent = StartButton

-- Stop Button
StopButton.Name = "StopButton"
StopButton.Parent = ContentFrame
StopButton.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
StopButton.BorderSizePixel = 0
StopButton.Position = UDim2.new(0.53, 0, 0.6, 0)
StopButton.Size = UDim2.new(0.42, 0, 0, 45)
StopButton.Font = Enum.Font.GothamBold
StopButton.Text = "‚ñ† STOP"
StopButton.TextColor3 = Color3.fromRGB(255, 255, 255)
StopButton.TextSize = 15

local StopCorner = Instance.new("UICorner")
StopCorner.CornerRadius = UDim.new(0, 10)
StopCorner.Parent = StopButton

-- Status Label
StatusLabel.Name = "StatusLabel"
StatusLabel.Parent = ContentFrame
StatusLabel.BackgroundColor3 = Color3.fromRGB(35, 35, 50)
StatusLabel.BorderSizePixel = 0
StatusLabel.Position = UDim2.new(0.05, 0, 0.78, 0)
StatusLabel.Size = UDim2.new(0.9, 0, 0, 55)
StatusLabel.Font = Enum.Font.Gotham
StatusLabel.Text = "Status: Ready\nWaiting to hook..."
StatusLabel.TextColor3 = Color3.fromRGB(150, 255, 150)
StatusLabel.TextSize = 12
StatusLabel.TextWrapped = true

local StatusCorner = Instance.new("UICorner")
StatusCorner.CornerRadius = UDim.new(0, 8)
StatusCorner.Parent = StatusLabel

-- Variables
local isHooked = false
local oldApplyStationaryTrain
local oldApplyMobileTrain
local hookCount = 0

-- Functions
local function formatNumber(num)
    local suffixes = {"", "K", "M", "B", "T", "Qa", "Qi", "Sx", "Sp", "Oc", "No", "Dc"}
    local tier = math.floor(math.log10(math.abs(num) + 1) / 3)
    
    if tier <= 0 then
        return tostring(math.floor(num))
    end
    
    local suffix = suffixes[math.min(tier + 1, #suffixes)] or "‚àû"
    local scale = math.pow(10, tier * 3)
    local scaled = num / scale
    
    return string.format("%.2f%s", scaled, suffix)
end

local function hookTrainingRemotes()
    if isHooked then return end
    
    local multiplier = tonumber(MultiplierInput.Text) or 1000000
    
    -- Hook ApplyStationaryTrain (stationary training)
    pcall(function()
        local ApplyStationaryTrain = ReplicatedStorage.TrainEquipment.Remote.ApplyStationaryTrain
        oldApplyStationaryTrain = ApplyStationaryTrain.OnClientInvoke
        
        ApplyStationaryTrain.OnClientInvoke = function(...)
            hookCount = hookCount + 1
            StatusLabel.Text = string.format(
                "Status: HOOKED! ‚úì\nTraining detected: %d times\nMultiplier: %s active!",
                hookCount,
                formatNumber(multiplier)
            )
            
            -- Call original function first
            local result = oldApplyStationaryTrain(...)
            
            -- Then inject extreme values
            task.spawn(function()
                for trainType = 1, 4 do
                    pcall(function()
                        local PlayerTrainValueHasChanged = ReplicatedStorage.TrainSystem.Bindable.PlayerTrainValueHasChanged
                        local baseValue = math.random(100, 500)
                        local boostedValue = baseValue * multiplier
                        
                        PlayerTrainValueHasChanged:Fire(
                            LocalPlayer,
                            trainType,
                            boostedValue,
                            boostedValue - baseValue
                        )
                    end)
                    task.wait(0.05)
                end
            end)
            
            return result
        end
    end)
    
    -- Hook ApplyMobileTrain (mobile training)
    pcall(function()
        local ApplyMobileTrain = ReplicatedStorage.TrainEquipment.Remote.ApplyMobileTrain
        oldApplyMobileTrain = ApplyMobileTrain.OnClientInvoke
        
        ApplyMobileTrain.OnClientInvoke = function(...)
            hookCount = hookCount + 1
            StatusLabel.Text = string.format(
                "Status: HOOKED! ‚úì\nTraining detected: %d times\nMultiplier: %s active!",
                hookCount,
                formatNumber(multiplier)
            )
            
            local result = oldApplyMobileTrain(...)
            
            task.spawn(function()
                for trainType = 1, 4 do
                    pcall(function()
                        local PlayerTrainValueHasChanged = ReplicatedStorage.TrainSystem.Bindable.PlayerTrainValueHasChanged
                        local baseValue = math.random(100, 500)
                        local boostedValue = baseValue * multiplier
                        
                        PlayerTrainValueHasChanged:Fire(
                            LocalPlayer,
                            trainType,
                            boostedValue,
                            boostedValue - baseValue
                        )
                    end)
                    task.wait(0.05)
                end
            end)
            
            return result
        end
    end)
    
    -- Hook into Bindable events that fire during training
    pcall(function()
        local ApplyStationaryTrainBindable = ReplicatedStorage.TrainEquipment.Bindable.ApplyStationaryTrain
        local oldInvoke = ApplyStationaryTrainBindable.Invoke
        
        ApplyStationaryTrainBindable.Invoke = function(self, ...)
            local result = oldInvoke(self, ...)
            
            task.spawn(function()
                local multiplier = tonumber(MultiplierInput.Text) or 1000000
                for trainType = 1, 4 do
                    pcall(function()
                        local PlayerTrainValueHasChanged = ReplicatedStorage.TrainSystem.Bindable.PlayerTrainValueHasChanged
                        local baseValue = math.random(100, 500)
                        local boostedValue = baseValue * multiplier
                        
                        PlayerTrainValueHasChanged:Fire(
                            LocalPlayer,
                            trainType,
                            boostedValue,
                            boostedValue - baseValue
                        )
                    end)
                end
            end)
            
            return result
        end
    end)
    
    isHooked = true
end

local function unhookTrainingRemotes()
    if not isHooked then return end
    
    pcall(function()
        if oldApplyStationaryTrain then
            ReplicatedStorage.TrainEquipment.Remote.ApplyStationaryTrain.OnClientInvoke = oldApplyStationaryTrain
        end
    end)
    
    pcall(function()
        if oldApplyMobileTrain then
            ReplicatedStorage.TrainEquipment.Remote.ApplyMobileTrain.OnClientInvoke = oldApplyMobileTrain
        end
    end)
    
    isHooked = false
end

local function startHook()
    if isHooked then return end
    
    local multiplier = tonumber(MultiplierInput.Text)
    
    if not multiplier or multiplier < 1 then
        StatusLabel.Text = "Error: Invalid multiplier!\nEnter a number ‚â• 1"
        StatusLabel.TextColor3 = Color3.fromRGB(255, 100, 100)
        return
    end
    
    hookCount = 0
    StartButton.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
    StatusLabel.Text = string.format(
        "Status: Hooking...\nMultiplier: %s\nStart training in-game now!",
        formatNumber(multiplier)
    )
    StatusLabel.TextColor3 = Color3.fromRGB(255, 215, 0)
    
    -- Apply buff items
    task.spawn(function()
        local buffItems = {18, 19, 20, 21}
        for _, itemId in ipairs(buffItems) do
            pcall(function()
                local TryOperatingItem = ReplicatedStorage.PlayerItemBackpack.Remote.TryOperatingItemByPlayer
                TryOperatingItem:InvokeServer(
                    {
                        GridInfo = {Id = itemId, Num = 1},
                        GridIndex = "401"
                    },
                    itemId,
                    1,
                    {Operation = "UseItem", PointingOperation = "UseSingleBuffConsum"}
                )
            end)
            task.wait(0.1)
        end
    end)
    
    hookTrainingRemotes()
    
    task.wait(1)
    StatusLabel.Text = string.format(
        "Status: HOOK ACTIVE! ‚úì\nMultiplier: %s\nStart training to see effect!",
        formatNumber(multiplier)
    )
    StatusLabel.TextColor3 = Color3.fromRGB(150, 255, 150)
end

local function stopHook()
    unhookTrainingRemotes()
    
    StartButton.BackgroundColor3 = Color3.fromRGB(50, 200, 80)
    StatusLabel.Text = string.format(
        "Status: Hook removed\nTotal trains hooked: %d\nValues should be saved!",
        hookCount
    )
    StatusLabel.TextColor3 = Color3.fromRGB(255, 170, 0)
end

-- Button Connections
StartButton.MouseButton1Click:Connect(startHook)
StopButton.MouseButton1Click:Connect(stopHook)

MinimizeButton.MouseButton1Click:Connect(function()
    ContentFrame.Visible = not ContentFrame.Visible
    if ContentFrame.Visible then
        MainFrame.Size = UDim2.new(0, 420, 0, 350)
        MinimizeButton.Text = "_"
    else
        MainFrame.Size = UDim2.new(0, 420, 0, 40)
        MinimizeButton.Text = "‚ñ°"
    end
end)

CloseButton.MouseButton1Click:Connect(function()
    stopHook()
    ScreenGui:Destroy()
end)

-- Hover effects
local function addHoverEffect(button, normalColor, hoverColor)
    button.MouseEnter:Connect(function()
        button.BackgroundColor3 = hoverColor
    end)
    button.MouseLeave:Connect(function()
        button.BackgroundColor3 = normalColor
    end)
end

addHoverEffect(StartButton, Color3.fromRGB(50, 200, 80), Color3.fromRGB(70, 220, 100))
addHoverEffect(StopButton, Color3.fromRGB(200, 50, 50), Color3.fromRGB(220, 70, 70))
addHoverEffect(MinimizeButton, Color3.fromRGB(255, 170, 0), Color3.fromRGB(255, 190, 50))
addHoverEffect(CloseButton, Color3.fromRGB(220, 50, 50), Color3.fromRGB(240, 70, 70))

-- Parent to CoreGui
if gethui then
    ScreenGui.Parent = gethui()
elseif syn and syn.protect_gui then
    syn.protect_gui(ScreenGui)
    ScreenGui.Parent = game:GetService("CoreGui")
else
    ScreenGui.Parent = game:GetService("CoreGui")
end

print("üî• Training Hook V4 Loaded!")
print("üéØ This version HOOKS into actual training calls")
print("üí° How it works:")
print("  1. Hooks ApplyStationaryTrain and ApplyMobileTrain")
print("  2. When you train in-game, it multiplies the values")
print("  3. Values go to server through normal game flow")
print("‚ö†Ô∏è Start with multiplier 1000000 (1 Million) first!")
print("üìà Increase gradually to avoid detection")
